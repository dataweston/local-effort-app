{"version":3,"file":"static/js/253.f156e9e4.chunk.js","mappings":"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","sources":["components/common/ServiceCard.js","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/motion-dom/dist/es/utils/transform.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../node_modules/motion-utils/dist/es/easing/utils/get-easing-for-segment.mjs","../node_modules/motion-utils/dist/es/wrap.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animate/resolve-subjects.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-repeat-duration.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/normalize-times.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs","../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/subject.mjs","../node_modules/framer-motion/dist/es/animation/animate/sequence.mjs","../node_modules/framer-motion/dist/es/animation/animate/index.mjs","components/crowdfunding/PizzaSVG.js","pages/HomePage.js","components/common/cloudinaryImage.jsx"],"sourcesContent":["// src/components/common/ServiceCard.js\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { scaleOnHover } from '../../utils/animations';\r\n\r\nconst ServiceCard = ({ to = \"#\", title, description, children }) => (\r\n  <motion.div\r\n    {...scaleOnHover}\r\n    className=\"group rounded-xl bg-neutral-50 p-8 shadow-sm ring-1 ring-neutral-200 transition-shadow hover:shadow-md\"\r\n    initial={{ opacity: 0, y: 10 }}\r\n    whileInView={{ opacity: 1, y: 0 }}\r\n    viewport={{ once: true, amount: 0.2 }}\r\n  >\r\n    <Link to={to} className=\"block h-full\">\r\n      <h4 className=\"text-2xl font-bold uppercase tracking-tight\">{title}</h4>\r\n      <p className=\"font-mono text-neutral-600 min-h-[5.5rem] mt-2\">{description}</p>\r\n      <span className=\"font-mono text-sm inline-block underline underline-offset-4 group-hover:translate-x-0.5 transition-transform\">\r\n        Learn More →\r\n      </span>\r\n    </Link>\r\n    {children && <div className=\"mt-4\">{children}</div>}\r\n  </motion.div>\r\n);\r\n\r\nexport default ServiceCard;\r\n","import { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, options);\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","class GroupAnimation {\n    constructor(animations) {\n        // Bound to accomadate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const subscriptions = this.animations.map((animation) => animation.attachTimeline(timeline));\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get state() {\n        return this.getAll(\"state\");\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","import { wrap } from '../../wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { resolveElements } from 'motion-dom';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\n\nfunction resolveSubjects(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && isDOMKeyframes(keyframes)) {\n        return resolveElements(subject, scope, selectorCache);\n    }\n    else if (subject instanceof NodeList) {\n        return Array.from(subject);\n    }\n    else if (Array.isArray(subject)) {\n        return subject;\n    }\n    else {\n        return [subject];\n    }\n}\n\nexport { resolveSubjects };\n","function calculateRepeatDuration(duration, repeat, _repeatDelay) {\n    return duration * (repeat + 1);\n}\n\nexport { calculateRepeatDuration };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else if (next.startsWith(\"<\")) {\n        return Math.max(0, prev + parseFloat(next.slice(1)));\n    }\n    else {\n        return labels.get(next) ?? current;\n    }\n}\n\nexport { calcNextTime };\n","import { mixNumber } from 'motion-dom';\nimport { getEasingForSegment, removeItem } from 'motion-utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","/**\n * Take an array of times that represent repeated keyframes. For instance\n * if we have original times of [0, 0.5, 1] then our repeated times will\n * be [0, 0.5, 1, 1, 1.5, 2]. Loop over the times and scale them back\n * down to a 0-1 scale.\n */\nfunction normalizeTimes(times, repeat) {\n    for (let i = 0; i < times.length; i++) {\n        times[i] = times[i] / (repeat + 1);\n    }\n}\n\nexport { normalizeTimes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { isMotionValue, defaultOffset, isGenerator, createGeneratorEasing, fillOffset } from 'motion-dom';\nimport { progress, secondsToMilliseconds, invariant, getEasingForSegment } from 'motion-utils';\nimport { resolveSubjects } from '../animate/resolve-subjects.mjs';\nimport { calculateRepeatDuration } from './utils/calc-repeat-duration.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { normalizeTimes } from './utils/normalize-times.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nconst MAX_REPEAT = 20;\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", repeat, repeatType, repeatDelay = 0, ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numSubjects)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = isGenerator(type)\n                ? type\n                : generators?.[type || \"keyframes\"];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration ?? (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Handle repeat options\n             */\n            if (repeat) {\n                invariant(repeat < MAX_REPEAT, \"Repeat count too high, must be less than 20\", \"repeat-count-high\");\n                duration = calculateRepeatDuration(duration, repeat);\n                const originalKeyframes = [...valueKeyframesAsList];\n                const originalTimes = [...times];\n                ease = Array.isArray(ease) ? [...ease] : [ease];\n                const originalEase = [...ease];\n                for (let repeatIndex = 0; repeatIndex < repeat; repeatIndex++) {\n                    valueKeyframesAsList.push(...originalKeyframes);\n                    for (let keyframeIndex = 0; keyframeIndex < originalKeyframes.length; keyframeIndex++) {\n                        times.push(originalTimes[keyframeIndex] + (repeatIndex + 1));\n                        ease.push(keyframeIndex === 0\n                            ? \"linear\"\n                            : getEasingForSegment(originalEase, keyframeIndex - 1));\n                    }\n                }\n                normalizeTimes(times, repeat);\n            }\n            const targetTime = startTime + duration;\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            const subjects = resolveSubjects(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = getSubjectSequence(thisSubject, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition && transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n","import { isSVGElement, isSVGSVGElement } from 'motion-dom';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { ObjectVisualElement } from '../../render/object/ObjectVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\n\nfunction createDOMVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element) && !isSVGSVGElement(element)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options);\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\nfunction createObjectVisualElement(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = new ObjectVisualElement(options);\n    node.mount(subject);\n    visualElementStore.set(subject, node);\n}\n\nexport { createDOMVisualElement, createObjectVisualElement };\n","import { isMotionValue } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\n\nfunction isSingleValue(subject, keyframes) {\n    return (isMotionValue(subject) ||\n        typeof subject === \"number\" ||\n        (typeof subject === \"string\" && !isDOMKeyframes(keyframes)));\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n    const animations = [];\n    if (isSingleValue(subject, keyframes)) {\n        animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes)\n            ? keyframes.default || keyframes\n            : keyframes, options ? options.default || options : options));\n    }\n    else {\n        const subjects = resolveSubjects(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        invariant(Boolean(numSubjects), \"No valid elements provided.\", \"no-valid-elements\");\n        for (let i = 0; i < numSubjects; i++) {\n            const thisSubject = subjects[i];\n            invariant(thisSubject !== null, \"You're trying to perform an animation on null. Ensure that selectors are correctly finding elements and refs are correctly hydrated.\", \"animate-null\");\n            const createVisualElement = thisSubject instanceof Element\n                ? createDOMVisualElement\n                : createObjectVisualElement;\n            if (!visualElementStore.has(thisSubject)) {\n                createVisualElement(thisSubject);\n            }\n            const visualElement = visualElementStore.get(thisSubject);\n            const transition = { ...options };\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (\"delay\" in transition &&\n                typeof transition.delay === \"function\") {\n                transition.delay = transition.delay(i, numSubjects);\n            }\n            animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n        }\n    }\n    return animations;\n}\n\nexport { animateSubject };\n","import { spring } from 'motion-dom';\nimport { createAnimationsFromSequence } from '../sequence/create.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        animations.push(...animateSubject(subject, keyframes, transition));\n    });\n    return animations;\n}\n\nexport { animateSequence };\n","import { GroupAnimationWithThen } from 'motion-dom';\nimport { removeItem } from 'motion-utils';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupAnimationWithThen(animations);\n        if (scope) {\n            scope.animations.push(animation);\n            animation.finished.then(() => {\n                removeItem(scope.animations, animation);\n            });\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import React, { useMemo, useEffect, useState } from 'react';\r\nimport { motion, useMotionValue, useTransform, animate } from 'framer-motion';\r\n\r\nexport const PizzaSVG = ({ size, goal, filled }) => {\r\n  const center = size / 2;\r\n  const radius = size * 0.4;\r\n  const crustWidth = size * 0.08;\r\n  const innerRadius = radius - crustWidth;\r\n  const numSlices = Math.min(goal, 1000);\r\n\r\n  const pepperonis = useMemo(() => {\r\n    const peps = [];\r\n    for (let i = 0; i < 15; i++) {\r\n      const angle = Math.random() * 2 * Math.PI;\r\n      const dist = Math.sqrt(Math.random()) * (innerRadius - 10);\r\n      peps.push({\r\n        cx: center + dist * Math.cos(angle),\r\n        cy: center + dist * Math.sin(angle),\r\n        r: size * 0.025 * (Math.random() * 0.4 + 0.8)\r\n      });\r\n    }\r\n    return peps;\r\n  }, [size, center, innerRadius]);\r\n\r\n  const Slice = ({ index }) => {\r\n    const isFilled = index < filled;\r\n    const anglePerSlice = 360 / numSlices;\r\n    const startAngle = -90 + index * anglePerSlice;\r\n    const endAngle = startAngle + anglePerSlice;\r\n\r\n    const start = {\r\n      x: center + innerRadius * Math.cos(startAngle * Math.PI / 180),\r\n      y: center + innerRadius * Math.sin(startAngle * Math.PI / 180)\r\n    };\r\n    const end = {\r\n      x: center + innerRadius * Math.cos(endAngle * Math.PI / 180),\r\n      y: center + innerRadius * Math.sin(endAngle * Math.PI / 180)\r\n    };\r\n\r\n    const largeArcFlag = anglePerSlice <= 180 ? \"0\" : \"1\";\r\n    const d = `M ${center},${center} L ${start.x},${start.y} A ${innerRadius},${innerRadius} 0 ${largeArcFlag} 1 ${end.x},${end.y} Z`;\r\n\r\n    return (\r\n      <motion.path\r\n        d={d}\r\n        initial={{ fill: 'transparent' }}\r\n        animate={{ fill: isFilled ? '#df4a21' : 'transparent' }}\r\n        transition={{ duration: 0.3, delay: index * 0.002 }}\r\n        stroke={isFilled ? '#c13e1c' : '#e1b44d'}\r\n        strokeWidth={isFilled ? 1 : 0.5}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Animated number in center\r\n  const count = useMotionValue(0);\r\n  const rounded = useTransform(count, Math.round);\r\n  const [pulseKey, setPulseKey] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const controls = animate(count, filled, {\r\n      duration: 2,\r\n      ease: 'easeOut',\r\n      onUpdate: (latest) => {\r\n        if (Math.round(latest) % 50 === 0 && Math.round(latest) !== 0) {\r\n          setPulseKey(Math.round(latest));\r\n        }\r\n      }\r\n    });\r\n    return controls.stop;\r\n  }, [filled, count]);\r\n\r\n  return (\r\n    <svg viewBox={`0 0 ${size} ${size}`} width={size} height={size} className=\"drop-shadow-lg\">\r\n      <defs>\r\n        <filter id=\"crust-texture\" x=\"-20%\" y=\"-20%\" width=\"140%\" height=\"140%\">\r\n          <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.1\" numOctaves=\"3\" result=\"noise\"/>\r\n          <feDiffuseLighting in=\"noise\" lightingColor=\"#d4a751\" surfaceScale=\"2\" result=\"light\">\r\n            <feDistantLight azimuth=\"45\" elevation=\"60\" />\r\n          </feDiffuseLighting>\r\n          <feComposite in=\"light\" in2=\"SourceGraphic\" operator=\"in\" />\r\n        </filter>\r\n      </defs>\r\n\r\n      {/* Cheese base */}\r\n      <circle cx={center} cy={center} r={innerRadius} fill=\"#f4cf5d\" />\r\n\r\n      {/* Pizza slices */}\r\n      <g>\r\n        {Array.from({ length: numSlices }).map((_, i) => <Slice key={i} index={i} />)}\r\n      </g>\r\n\r\n      {/* Pepperonis */}\r\n      <g>\r\n        {pepperonis.map((pep, i) => (\r\n          <circle key={i} cx={pep.cx} cy={pep.cy} r={pep.r} fill=\"#c13e1c\" stroke=\"#a12a0f\" strokeWidth=\"1\" />\r\n        ))}\r\n      </g>\r\n\r\n      {/* Crust */}\r\n      <circle cx={center} cy={center} r={radius} fill=\"#e1b44d\" filter=\"url(#crust-texture)\" />\r\n      <circle cx={center} cy={center} r={innerRadius} fill=\"none\" stroke=\"#d4a751\" strokeWidth=\"2\" />\r\n\r\n      {/* Center counter with animated number */}\r\n      <g>\r\n        <motion.circle\r\n          key={pulseKey}\r\n          cx={center}\r\n          cy={center}\r\n          r={size * 0.18}\r\n          fill=\"#fff\"\r\n          stroke=\"#eee\"\r\n          strokeWidth=\"2\"\r\n          initial={{ scale: 1, opacity: 1 }}\r\n          animate={{ scale: [1, 1.1, 1], opacity: [1, 0.7, 1] }}\r\n          transition={{ duration: 0.6 }}\r\n        />\r\n        <motion.text\r\n          x={center}\r\n          y={center - 6}\r\n          textAnchor=\"middle\"\r\n          fontSize={size * 0.1}\r\n          fontWeight=\"700\"\r\n          fill=\"#333\"\r\n        >\r\n          {rounded}\r\n        </motion.text>\r\n        <motion.text\r\n          x={center}\r\n          y={center + 18}\r\n          textAnchor=\"middle\"\r\n          fontSize={size * 0.04}\r\n          fill=\"#666\"\r\n          opacity=\"0.8\"\r\n        >\r\n          PIZZAS\r\n        </motion.text>\r\n      </g>\r\n    </svg>\r\n  );\r\n};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ServiceCard from '../components/common/ServiceCard';\r\nimport { motion, useMotionValue, useTransform, animate } from 'framer-motion';\r\nimport { fadeInUp, fadeInLeft } from '../utils/animations';\r\nimport { PizzaSVG } from '../components/crowdfunding/PizzaSVG';\r\nimport CloudinaryImage from '../components/common/cloudinaryImage'; // Import the new component\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const goal = 1000;\r\n  const filled = 327; // fetch this dynamically if possible\r\n\r\n  // Animate pizza count-up\r\n  const count = useMotionValue(0);\r\n  const rounded = useTransform(count, Math.round);\r\n  React.useEffect(() => {\r\n    const controls = animate(count, filled, { duration: 2, ease: 'easeOut' });\r\n    return controls.stop;\r\n  }, [filled]);\r\n\r\n  // --- NEW: Define image data for both the component and structured data ---\r\n  const heroImage = {\r\n    publicId: 'gallery/IMG_3145', // The public ID from Cloudinary\r\n    alt: 'A beautifully plated dish with microgreens and edible flowers',\r\n    // You must replace 'your-cloud-name' with your actual Cloudinary cloud name\r\n    url: 'https://res.cloudinary.com/your-cloud-name/image/upload/v1/gallery/IMG_3145.jpg'\r\n  };\r\n\r\n  // --- NEW: Define the JSON-LD structured data object for SEO ---\r\n  const imageJsonLd = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"ImageObject\",\r\n    \"contentUrl\": heroImage.url,\r\n    \"name\": heroImage.alt,\r\n    \"description\": \"A sample of the professional in-home dining experience by Local Effort.\",\r\n    \"creator\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"Local Effort\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Local Effort | Personal Chef & Event Catering in Roseville, MN</title>\r\n        <meta name=\"description\" content=\"Local Effort offers personal chef services, event catering, and weekly meal prep in Roseville, MN.\" />\r\n        {/* --- NEW: Inject the structured data into the page head --- */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(imageJsonLd)}\r\n        </script>\r\n      </Helmet>\r\n\r\n      <div className=\"space-y-24\">\r\n        {/* Hero */}\r\n        <section className=\"mx-auto max-w-6xl px-4 md:px-6 lg:px-8 grid md:grid-cols-2 gap-8 items-center min-h-[60vh]\">\r\n          <div>\r\n            <motion.h2 variants={fadeInLeft} initial=\"initial\" animate=\"animate\" className=\"text-hero uppercase\">\r\n              Minnesotan Food\r\n            </motion.h2>\r\n            <motion.h3 variants={fadeInLeft} initial=\"initial\" animate=\"animate\" transition={{ delay: 0.05 }} className=\"text-hero uppercase text-neutral-400\">\r\n              For Your Functions.\r\n            </motion.h3>\r\n            <motion.p variants={fadeInUp} initial=\"initial\" animate=\"animate\" className=\"mt-8 text-body max-w-md\">\r\n              Professional in-home dining. 30 years collective fine food experience. Sourcing the best local ingredients without compromise.\r\n            </motion.p>\r\n            <motion.button\r\n              whileHover={{ scale: 1.03 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              onClick={() => navigate('/services')}\r\n              className=\"btn btn-primary mt-8 text-lg\"\r\n            >\r\n              Explore Services\r\n            </motion.button>\r\n          </div>\r\n\r\n          <motion.div\r\n            className=\"w-full min-h-[400px] h-full rounded-xl overflow-hidden\" // Added overflow-hidden\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.6 }}\r\n          >\r\n            {/* --- REPLACED: The old div is replaced with the CloudinaryImage component --- */}\r\n            <CloudinaryImage\r\n              publicId={heroImage.publicId}\r\n              alt={heroImage.alt}\r\n              width={600}\r\n              height={600}\r\n              className=\"w-full h-full object-cover\" // Ensure it fills the container\r\n            />\r\n          </motion.div>\r\n        </section>\r\n\r\n        {/* Pizza Tracker */}\r\n        <section className=\"bg-neutral-50 py-16\">\r\n          <div className=\"mx-auto max-w-4xl text-center space-y-8\">\r\n            <h3 className=\"text-heading uppercase\">Our Goal: 1000 Pizzas</h3>\r\n            <div className=\"flex justify-center\">\r\n              <PizzaSVG size={300} goal={goal} filled={filled} />\r\n            </div>\r\n            <motion.div className=\"text-4xl font-bold\">\r\n              {rounded}\r\n            </motion.div>\r\n            <p className=\"text-neutral-600\">Pizzas sold towards our fundraiser</p>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Offerings */}\r\n        <section className=\"mx-auto max-w-6xl px-4 md:px-6 lg:px-8\">\r\n          <h3 className=\"text-heading uppercase mb-6 border-b border-neutral-300 pb-3\">Core Offerings</h3>\r\n          <div className=\"grid md:grid-cols-3 gap-6\">\r\n            <ServiceCard to=\"/meal-prep\" title=\"Weekly Meal Prep\" description=\"Foundation & custom plans. Basic, good nutrition from local Midwest sources.\" />\r\n            <ServiceCard to=\"/events\" title=\"Dinners & Events\" description=\"Event catering and in-home chef experiences, for parties of 2 to 50.\" />\r\n            <ServiceCard to=\"/pizza-party\" title=\"Pizza Parties\" description=\"Mobile high-temperature pizza oven, sourdough crusts, and all local ingredients.\" />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// src/components/CloudinaryImage.jsx\r\nimport React from 'react';\r\nimport { AdvancedImage, responsive, lazyload } from '@cloudinary/react';\r\nimport { Cloudinary } from '@cloudinary/url-gen';\r\n\r\n// --- CORRECTED IMPORTS ---\r\n// Each function/action must be imported from its specific file path within the library.\r\nimport { fill } from \"@cloudinary/url-gen/actions/resize\";\r\nimport { autoGravity } from \"@cloudinary/url-gen/qualifiers/gravity\";\r\n// The 'auto' helpers for quality and format are 'qualifiers', not 'actions'.\r\nimport { auto as qualityAuto } from \"@cloudinary/url-gen/qualifiers/quality\";\r\nimport { auto as formatAuto } from \"@cloudinary/url-gen/qualifiers/format\";\r\n\r\n// Initialize Cloudinary.\r\n// IMPORTANT: Replace 'your-cloud-name' with your actual Cloudinary cloud name.\r\nconst cld = new Cloudinary({\r\n  cloud: {\r\n    cloudName: 'your-cloud-name'\r\n  }\r\n});\r\n\r\n/**\r\n * A powerful, reusable Cloudinary image component.\r\n * @param {string} publicId - The public ID of the image from Cloudinary.\r\n * @param {string} alt - The alt text for the image.\r\n * @param {number} [width] - The desired width for a fill transformation.\r\n * @param {number} [height] - The desired height for a fill transformation.\r\n * @param {string} [className] - Optional CSS classes to apply to the image.\r\n */\r\nconst CloudinaryImage = ({ publicId, alt, width, height, className }) => {\r\n  // If no publicId is provided, render a placeholder to avoid errors\r\n  if (!publicId) {\r\n    const placeholderStyle = {\r\n      width: width ? `${width}px` : '100%',\r\n      height: height ? `${height}px` : '100%',\r\n      backgroundColor: '#f0f0f0', // A light gray placeholder\r\n      display: 'inline-block',\r\n    };\r\n    return <span style={placeholderStyle} className={className} />;\r\n  }\r\n\r\n  // Use the public ID to get the image object from Cloudinary\r\n  const myImage = cld.image(publicId);\r\n\r\n  // Apply standard optimizations and transformations using the correctly imported functions\r\n  myImage\r\n    .quality(qualityAuto()) // Use the .quality() method for q_auto\r\n    .format(formatAuto());   // Use the .format() method for f_auto\r\n\r\n  // If width and height are provided, apply a fill transformation with auto-gravity\r\n  if (width && height) {\r\n    myImage.resize(fill(width, height).gravity(autoGravity()));\r\n  }\r\n\r\n  return (\r\n    <AdvancedImage\r\n      cldImg={myImage}\r\n      alt={alt}\r\n      className={className}\r\n      // These plugins add responsiveness (srcset) and lazy loading for performance\r\n      plugins={[\r\n        responsive({ steps: [800, 1000, 1400] }),\r\n        lazyload()\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CloudinaryImage;\r\n"],"names":["_ref","to","title","description","children","_jsxs","motion","div","_objectSpread","scaleOnHover","className","initial","opacity","y","whileInView","viewport","once","amount","Link","_jsx","useMotionValue","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","useCombineMotionValues","values","combineValues","updateValue","set","useIsomorphicLayoutEffect","scheduleUpdate","frame","preRender","subscriptions","map","v","forEach","unsubscribe","cancelFrame","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","collectMotionValues","current","undefined","useComputed","transformer","useImmediate","Array","isArray","arguments","length","argOffset","inputValue","inputRange","interpolator","interpolate","transform","useListTransform","latest","numValues","i","get","GroupAnimation","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","cancel","time","speed","state","startTime","duration","max","Math","methodName","controls","play","pause","complete","GroupAnimationWithThen","then","onResolve","_onReject","finally","getEasingForSegment","easing","isEasingArray","wrap","min","rangeSize","isDOMKeyframes","keyframes","resolveSubjects","subject","scope","selectorCache","resolveElements","NodeList","from","calculateRepeatDuration","repeat","_repeatDelay","calcNextTime","next","prev","labels","startsWith","parseFloat","slice","_labels$get","addKeyframes","sequence","offset","endTime","keyframe","at","removeItem","eraseKeyframes","push","mixNumber","normalizeTimes","times","compareByTime","a","b","getSubjectSequence","sequences","has","getValueSequence","name","keyframesAsList","getValueTransition","transition","key","isNumber","isNumberKeyframesArray","every","ObjectVisualElement","VisualElement","super","type","readValueFromInstance","instance","object","isObjectKey","getBaseTargetFromProps","removeValueFromRenderState","renderState","output","measureInstanceViewportBox","createBox","build","latestValues","Object","assign","renderInstance","sortInstanceNodePosition","createDOMVisualElement","element","presenceContext","props","visualState","transformOrigin","style","vars","attrs","node","isSVGElement","isSVGSVGElement","SVGVisualElement","HTMLVisualElement","mount","visualElementStore","createObjectVisualElement","animateSubject","isMotionValue","isSingleValue","animateSingleValue","default","subjects","numSubjects","invariant","thisSubject","createVisualElement","Element","visualElement","delay","animateTarget","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","_objectWithoutProperties","_excluded","generators","defaultDuration","Map","elementCache","timeLabels","prevTime","currentTime","totalDuration","segment","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","defaultOffset","repeatType","repeatDelay","remainingTransition","_excluded2","ease","calculatedDelay","numKeyframes","createGenerator","isGenerator","absoluteDelta","delta","abs","springTransition","secondsToMilliseconds","springEasing","createGeneratorEasing","remainder","fillOffset","unshift","originalKeyframes","originalTimes","originalEase","repeatIndex","keyframeIndex","targetTime","subjectIndex","subjectSequence","valueSequences","sort","valueOffset","valueEasing","progress","definition","createAnimationsFromSequence","spring","animate","subjectOrSequence","optionsOrKeyframes","some","PizzaSVG","size","goal","filled","center","radius","innerRadius","numSlices","pepperonis","useMemo","peps","angle","random","PI","dist","sqrt","cx","cos","cy","sin","r","Slice","_ref2","index","isFilled","anglePerSlice","startAngle","endAngle","start","x","end","largeArcFlag","d","concat","path","fill","stroke","strokeWidth","count","rounded","round","pulseKey","setPulseKey","onUpdate","viewBox","width","height","id","baseFrequency","numOctaves","result","in","lightingColor","surfaceScale","azimuth","elevation","in2","operator","_","pep","circle","scale","text","textAnchor","fontSize","fontWeight","HomePage","navigate","useNavigate","React","heroImage","imageJsonLd","_Fragment","Helmet","content","JSON","stringify","h2","variants","fadeInLeft","h3","p","fadeInUp","button","whileHover","whileTap","onClick","CloudinaryImage","publicId","alt","ServiceCard","cld","Cloudinary","cloud","cloudName","placeholderStyle","backgroundColor","display","myImage","image","quality","qualityAuto","format","formatAuto","resize","gravity","autoGravity","AdvancedImage","cldImg","plugins","responsive","steps","lazyload"],"sourceRoot":""}