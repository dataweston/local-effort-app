{"version":3,"file":"static/js/528.55d65950.chunk.js","mappings":"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","sources":["sanityClient.js","components/menu/FoodItemCard.js","components/menu/FoodItemModal.js","firebaseConfig.js","components/menu/FeedbackForm.js","pages/HappyMondayPage.js"],"sourcesContent":["// src/client.js\r\nimport {createClient} from '@sanity/client'\r\n\r\nexport default createClient({\r\n  projectId: 'd6l9d0ea', // Find this in your sanity.json or at manage.sanity.io\r\n  dataset: 'localeffort', // Or the name of your dataset\r\n  useCdn: false, // `false` if you want to ensure fresh data\r\n  apiVersion: '2023-05-03', // Use a consistent API version\r\n})","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { fadeInUp } from '../../utils/animations'; // Assuming you have this from your other pages\r\n\r\nconst FoodItemCard = ({ item, onClick }) => {\r\n  return (\r\n    <motion.div\r\n      variants={fadeInUp} // Use an existing animation\r\n      onClick={onClick}\r\n      className=\"border border-neutral-200 rounded-lg p-6 cursor-pointer hover:shadow-lg hover:border-neutral-400 transition-all duration-300 bg-white\"\r\n      whileHover={{ scale: 1.03 }}\r\n      whileTap={{ scale: 0.98 }}\r\n    >\r\n      <h4 className=\"text-xl font-bold text-neutral-800\">{item.name}</h4>\r\n      <p className=\"text-neutral-600 mt-2 line-clamp-2\">{item.description}</p>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default FoodItemCard;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst backdrop = {\r\n  visible: { opacity: 1 },\r\n  hidden: { opacity: 0 },\r\n};\r\n\r\nconst modal = {\r\n  hidden: { y: \"-50px\", opacity: 0 },\r\n  visible: { y: \"0\", opacity: 1, transition: { delay: 0.1 } },\r\n};\r\n\r\nconst FoodItemModal = ({ item, onClose }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"fixed inset-0 bg-black bg-opacity-60 z-50 flex justify-center items-center p-4\"\r\n      variants={backdrop}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"hidden\"\r\n      onClick={onClose}\r\n    >\r\n      <motion.div\r\n        variants={modal}\r\n        className=\"bg-white rounded-lg shadow-xl max-w-lg w-full p-8 relative\"\r\n        onClick={(e) => e.stopPropagation()} // Prevents modal from closing when clicking inside\r\n      >\r\n        <button onClick={onClose} className=\"absolute top-4 right-4 text-neutral-500 hover:text-neutral-800 text-2xl\">&times;</button>\r\n        <h3 className=\"text-3xl font-bold mb-4\">{item.name}</h3>\r\n        <p className=\"text-body mb-6\">{item.description}</p>\r\n        <div>\r\n          <h4 className=\"font-bold text-lg mb-2\">Ingredients:</h4>\r\n          <ul className=\"list-disc list-inside text-neutral-600 space-y-1\">\r\n            {item.ingredients.map((ingredient, index) => (\r\n              <li key={index}>{ingredient}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default FoodItemModal;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration, now read from environment variables\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Cloud Firestore and get a reference to the service\r\nexport const db = getFirestore(app);\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from '../../firebaseConfig';\r\n\r\nconst FeedbackForm = () => {\r\n  const [formData, setFormData] = useState({ name: '', email: '', phone: '', category: 'requests', message: '' });\r\n  const [status, setStatus] = useState({ type: '', message: '' });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.message) {\r\n      setStatus({ type: 'error', message: 'Please enter a message before submitting.' });\r\n      return;\r\n    }\r\n    setStatus({ type: 'loading', message: 'Submitting...' });\r\n    try {\r\n      await addDoc(collection(db, 'feedback'), {\r\n        ...formData,\r\n        submittedAt: serverTimestamp()\r\n      });\r\n      setStatus({ type: 'success', message: 'Thank you! Your feedback has been sent.' });\r\n      setFormData({ name: '', email: '', phone: '', category: 'requests', message: '' }); // Clear form\r\n    } catch (error) {\r\n      console.error(\"Error adding document: \", error);\r\n      setStatus({ type: 'error', message: 'Something went wrong. Please try again.' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl bg-neutral-50 border border-neutral-200 p-8 rounded-lg\">\r\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        <div className=\"grid sm:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-neutral-700\">Category</label>\r\n            <select id=\"category\" name=\"category\" value={formData.category} onChange={handleChange} className=\"mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary focus:ring-primary\">\r\n              <option value=\"requests\">Requests</option>\r\n              <option value=\"quality\">Quality Feedback</option>\r\n              <option value=\"other\">Other</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\" className=\"block text-sm font-medium text-neutral-700\">Message</label>\r\n          <textarea id=\"message\" name=\"message\" rows=\"4\" value={formData.message} onChange={handleChange} required className=\"mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\r\n        </div>\r\n        <div className=\"grid sm:grid-cols-2 gap-6\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-neutral-700\">Name (Optional)</label>\r\n            <input type=\"text\" name=\"name\" id=\"name\" value={formData.name} onChange={handleChange} className=\"mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary focus:ring-primary\" />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-neutral-700\">Email (Optional)</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" value={formData.email} onChange={handleChange} className=\"mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary focus:ring-primary\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n           <motion.button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            whileHover={{ scale: 1.03 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            disabled={status.type === 'loading'}\r\n           >\r\n            {status.type === 'loading' ? 'Sending...' : 'Submit Feedback'}\r\n           </motion.button>\r\n          {status.message && (\r\n            <p className={`text-sm ${status.type === 'success' ? 'text-green-600' : 'text-red-600'}`}>{status.message}</p>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;","import React, {useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport BlockContent from '@sanity/block-content-to-react'; // Import the block renderer\r\n\r\nimport sanityClient from '../sanityClient';\r\nimport FoodItemCard from '../components/menu/FoodItemCard';\r\nimport FoodItemModal from '../components/menu/FoodItemModal';\r\nimport FeedbackForm from '../components/menu/FeedbackForm';\r\nimport { LoadingSpinner } from '../components/layout/LoadingSpinner';\r\n\r\nconst HappyMondayPage = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [pageContent, setPageContent] = useState(null); // State for the new content\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // This query fetches both menu items and the page content in one request\r\n    const query = `{\r\n      \"menuItems\": *[_type == \"menuItems\"],\r\n      \"pageContent\": *[_type == \"happyMondayPage\"][0]\r\n    }`;\r\n\r\n    sanityClient.fetch(query)\r\n      .then((data) => {\r\n        setMenuItems(data.menuItems || []);\r\n        setPageContent(data.pageContent); // Set the new page content\r\n        setIsLoading(false);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleCardClick = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Happy Monday | Local Effort</title>\r\n        <meta name=\"description\" content=\"Explore our special Happy Monday menu, made with the finest local ingredients.\" />\r\n      </Helmet>\r\n\r\n      <div className=\"space-y-24 mb-24\">\r\n        <section className=\"mx-auto max-w-6xl px-4 md:px-6 lg:px-8\">\r\n          {/* Render the dynamic content box */}\r\n          {pageContent && (\r\n            <div className=\"text-center mb-12\">\r\n              <h2 className=\"text-heading uppercase mb-4\">{pageContent.title}</h2>\r\n              {/* The BlockContent component renders rich text */}\r\n              <div className=\"prose lg:prose-lg mx-auto max-w-3xl\">\r\n                <BlockContent blocks={pageContent.body} client={sanityClient} />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {isLoading ? (\r\n            <div className=\"flex justify-center items-center h-64\">\r\n              <LoadingSpinner />\r\n            </div>\r\n          ) : (\r\n            <motion.div\r\n              className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\"\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              variants={{ animate: { transition: { staggerChildren: 0.1 } } }}\r\n            >\r\n              {menuItems.map(item => (\r\n                <FoodItemCard key={item._id} item={item} onClick={() => handleCardClick(item)} />\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </section>\r\n\r\n        <section className=\"mx-auto max-w-6xl px-4 md:px-6 lg:px-8\">\r\n            <h2 className=\"text-heading uppercase mb-6 border-b border-neutral-300 pb-3\">Feedback</h2>\r\n            <p className=\"text-body mb-8 max-w-2xl\">Have a suggestion, a request, or feedback on our quality? We'd love to hear it. Your input helps us grow and improve.</p>\r\n            <FeedbackForm />\r\n        </section>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n          <FoodItemModal item={selectedItem} onClose={handleCloseModal} />\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HappyMondayPage;\r\n"],"names":["createClient","projectId","dataset","useCdn","apiVersion","_ref","item","onClick","_jsxs","motion","div","variants","fadeInUp","className","whileHover","scale","whileTap","children","_jsx","name","description","backdrop","visible","opacity","hidden","modal","y","transition","delay","onClose","initial","animate","exit","e","stopPropagation","ingredients","map","ingredient","index","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","app","initializeApp","db","getFirestore","FeedbackForm","formData","setFormData","useState","email","phone","category","message","status","setStatus","type","handleChange","value","target","prev","_objectSpread","onSubmit","async","preventDefault","addDoc","collection","submittedAt","serverTimestamp","error","console","htmlFor","id","onChange","rows","required","button","disabled","concat","HappyMondayPage","menuItems","setMenuItems","pageContent","setPageContent","selectedItem","setSelectedItem","isLoading","setIsLoading","useEffect","sanityClient","fetch","then","data","catch","_Fragment","Helmet","content","title","BlockContent","blocks","body","client","LoadingSpinner","staggerChildren","FoodItemCard","handleCardClick","_id","AnimatePresence","FoodItemModal","handleCloseModal"],"sourceRoot":""}